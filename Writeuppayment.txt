package org.simplilearn.workshop;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.simplilearn.workshop.object.Locations;

@WebServlet("/payment")
public class Payment extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	boolean flag=false;
	if(request.getParameter("cardNumber").length()!=16) //get input values from website
	{
		flag=true;
		request.setAttribute("flag", flag);
		request.getRequestDispatcher("payment.jsp").forward(request, response);//pass data to requested website
	} else
	{
		
		Locations location=DetailsFill.getLocation(); 
		request.setAttribute("location", location);
		request.setAttribute("details",DetailsView.getDetails());
//		int capacity=location.getRemaining()-location.getPassengers();
		String sql="UPDATE masterlist SET Capacity= "+ "WHERE Id=";
		Cookie tem=new Cookie("number", "");   
		tem.setMaxAge(0);
		response.addCookie(tem);
		Cookie cookie[]=request.getCookies();
		for(Cookie temp: cookie)
		{
			if(temp.getName().equals("newID") && !temp.getValue().equals("0"))
			{
				sql=sql+Integer.parseInt(temp.getValue());
			}
		}
		
		try {  
			// step 1:load a driver
			Class.forName("com.mysql.cj.jdbc.Driver");

			String url = "jdbc:mysql://localhost:3306/teksystem?useSSL=false";
			String user = "root";
			String pass = "UP85aw053@";

			// step 2: obtain a connection
			Connection connection = DriverManager.getConnection(url, user, pass);
			System.out.println("got connection");

			Statement s = connection.createStatement();
			s.executeUpdate(sql);
			Cookie cookie1=new Cookie("ID", ""); //creating cookie object
			cookie1.setMaxAge(0); //set maximum age of cookie within seconds
			response.addCookie(cookie1); //adding cookies in response
			s.close();// closing connections
			connection.close();
		}catch(SQLException e)// catching exceptions
		{
			e.printStackTrace();
		}catch(Exception e)
		{
			e.printStackTrace();
		}
		request.getRequestDispatcher("paymentConfirmation.jsp").forward(request, response);
		
			}
					
		}
	}